version: '3'

services:

  reports_db:
    image: postgres:14.4
    container_name: "reports_db"
    networks:
      - reports_db_network
    volumes:
      - reports_db_volume:/var/lib/postgresql/data
    env_file:
      - .env.reports_db

  logs_db:
    image: postgres:14.4
    container_name: "logs_db"
    networks:
      - logs_db_network
    volumes:
      - logs_db_volume:/var/lib/postgresql/data
    env_file:
      - .env.logs_db

  redis:
    image: "redis:alpine"
    container_name: "redis"
    command:
      redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_volume:/data
      - ./backend/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - redis_network

  backend:
    build: ./backend
    container_name: "django_backend"
    command: >
      bash -c "
      sleep 5 &&
      python manage.py migrate --run-syncdb &&
      python manage.py collectstatic --noinput &&
      python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - reports_db
      - logs_db
      - redis
    volumes:
      - ./backend:/src
      - static_volume:/static
      - media_volume:/media
    networks:
      - nginx_network
      - reports_db_network
      - logs_db_network
      - redis_network
    tty: true
    env_file:
      - .env

  nginx:
    image: nginx:1.21.3
    container_name: "nginx"
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/static
      - media_volume:/media
    depends_on:
      - backend
    networks:
      - nginx_network

  celery:
    build: ./backend
    container_name: "celery"
    command: celery -A app.celery worker -l info --concurrency=6 -Q celery,sections,logs
    volumes:
      - ./backend:/src
      - media_volume:/media
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    networks:
      - redis_network
      - reports_db_network
      - logs_db_network

networks:
  logs_db_network:
    driver: bridge
  redis_network:
    driver: bridge
  nginx_network:
    driver: bridge

volumes:
  redis_volume:
  logs_db_volume:
  static_volume:
  media_volume:

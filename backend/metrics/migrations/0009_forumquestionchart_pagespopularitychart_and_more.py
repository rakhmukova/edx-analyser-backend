# Generated by Django 4.2.1 on 2024-04-13 11:27

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('metrics', '0008_rename_viewing_percent_median_videointeraction_unique_students_count'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForumQuestionChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PagesPopularityChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TextbookViewsChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WordSearchChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WordSearchCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100)),
                ('search_count', models.IntegerField()),
                ('chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.wordsearchchart')),
            ],
        ),
        migrations.CreateModel(
            name='TextbookViewsCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf_name', models.CharField(max_length=200)),
                ('views_count', models.IntegerField()),
                ('unique_students_count', models.IntegerField()),
                ('chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.textbookviewschart')),
            ],
        ),
        migrations.CreateModel(
            name='TextbookSectionReport',
            fields=[
                ('course_id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('last_time_accessed', models.DateTimeField(default=datetime.datetime.now)),
                ('last_time_updated', models.DateTimeField(default=datetime.datetime.now)),
                ('report_state', models.CharField(choices=[('not_started', 'Not started'), ('in_progress', 'In progress'), ('done', 'Created'), ('failed', 'Failed')], default='not_started', max_length=12)),
                ('error_reason', models.CharField(default=None, max_length=100, null=True)),
                ('textbook_views_chart', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.textbookviewschart')),
                ('word_search_chart', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.wordsearchchart')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PagesSectionReport',
            fields=[
                ('course_id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('last_time_accessed', models.DateTimeField(default=datetime.datetime.now)),
                ('last_time_updated', models.DateTimeField(default=datetime.datetime.now)),
                ('report_state', models.CharField(choices=[('not_started', 'Not started'), ('in_progress', 'In progress'), ('done', 'Created'), ('failed', 'Failed')], default='not_started', max_length=12)),
                ('error_reason', models.CharField(default=None, max_length=100, null=True)),
                ('pages_popularity_chart', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.pagespopularitychart')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PagesPopularity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_link', models.CharField(max_length=250)),
                ('visits_count', models.IntegerField()),
                ('chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.pagespopularitychart')),
            ],
        ),
        migrations.CreateModel(
            name='ForumSectionReport',
            fields=[
                ('course_id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('last_time_accessed', models.DateTimeField(default=datetime.datetime.now)),
                ('last_time_updated', models.DateTimeField(default=datetime.datetime.now)),
                ('report_state', models.CharField(choices=[('not_started', 'Not started'), ('in_progress', 'In progress'), ('done', 'Created'), ('failed', 'Failed')], default='not_started', max_length=12)),
                ('error_reason', models.CharField(default=None, max_length=100, null=True)),
                ('forum_question_chart', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.forumquestionchart')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForumQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField()),
                ('title', models.TextField()),
                ('likes_count', models.IntegerField(default=0)),
                ('comments_count', models.IntegerField(default=0)),
                ('question_type', models.CharField(choices=[('thread', 'Thread'), ('response', 'Response')])),
                ('chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='metrics.forumquestionchart')),
            ],
        ),
    ]
